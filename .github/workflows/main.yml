# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Molecular plus

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_windows:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest cython
       # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Build with Cython
      id: build
      run: echo "::set-output name=version::$(python pack_molecular.py)"
    - name: Upload windows zip
      uses: actions/upload-artifact@v2
      with:
          name: molecular-plus_${{steps.build.outputs.version}}_37_win.zip
          path: ./molecular-plus_${{steps.build.outputs.version}}_37_win.zip
             
  build_linux:

    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest cython
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Build with Cython
      id: build
      run: echo "::set-output name=version::$(python pack_molecular.py)"
    - name: Upload linux zip
      uses: actions/upload-artifact@v2
      with:
          name: molecular-plus_${{steps.build.outputs.version}}_37m_linux.zip
          path: ./molecular-plus_${{steps.build.outputs.version}}_37m_linux.zip
  
  build_macos:

    runs-on: macos-latest
    outputs:
      version: ${{steps.build.outputs.version}}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest cython
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Build with Cython
      id: build
      run: echo "::set-output name=version::$(python pack_molecular.py)"
    - name: Upload mac zip
      uses: actions/upload-artifact@v2
      with:
          name: molecular-plus_${{steps.build.outputs.version}}_37m_macos.zip
          path: ./molecular-plus_${{steps.build.outputs.version}}_37m_macos.zip

  upload_release:

    runs-on: macos-latest
    needs: [build_windows, build_linux, build_macos]

    steps:
    - name: Make Release
      uses: actions/create-release@v1
      id: create_release
      with:
          draft: True
          prerelease: True
          release_name: molecular-plus_${{needs.build_macos.outputs.version}}
          tag_name: ${{ github.ref }}
      env:
          GITHUB_TOKEN: ${{ github.token }}
    - name: upload linux artifact
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ github.token }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./molecular-plus_${{needs.build_macos.outputs.version}}_37m_linux.zip
          asset_name: molecular-plus_${{needs.build_macos.outputs.version}}_37m_linux.zip
          asset_content_type: application/zip
    - name: upload darwin artifact
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ github.token }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./molecular-plus_${{needs.build_macos.outputs.version}}_37m_macos.zip
          asset_name: molecular-plus_${{needs.build_macos.outputs.version}}_37m_macos.zip
          asset_content_type: application/zip
    - name: upload windows artifact
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ github.token }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./molecular-plus_${{needs.build_macos.outputs.version}}_37_win.zip
          asset_name: molecular-plus_${{needs.build_macos.outputs.version}}_37_win.zip
          asset_content_type: application/zip